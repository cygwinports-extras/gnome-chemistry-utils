--- origsrc/gnome-chemistry-utils-0.10.3/libs/gcp/document.cc	2009-01-05 13:09:59.000000000 -0600
+++ src/gnome-chemistry-utils-0.10.3/libs/gcp/document.cc	2009-01-12 00:33:27.890250000 -0600
@@ -1371,9 +1371,8 @@ void Document::OnThemeNamesChanged ()
 
 double Document::GetMedianBondLength ()
 {
-	vector <double> lengths;
+	double *lengths;
 	int max = 128, nb = 0;
-	lengths.reserve (max);
 	double result = 0.;
 	stack<map< string, Object * >::iterator> iters;
 	map< string, Object * >::iterator m;
@@ -1382,7 +1381,6 @@ double Document::GetMedianBondLength ()
 		if (Ob->GetType () == gcu::BondType) {
 			if (nb == max) {
 				max += 128;
-				lengths.resize (max);
 			}
 			lengths[nb++] = static_cast <Bond *> (Ob)->Get2DLength ();
 		} else if (Ob->HasChildren ()) {
@@ -1400,7 +1398,7 @@ double Document::GetMedianBondLength ()
 		}
 	}
 	if (nb > 0)
-		go_range_median_inter_nonconst (lengths.data (), nb, &result);
+		go_range_median_inter_nonconst (lengths, nb, &result);
 	return result;
 }
 
--- origsrc/gnome-chemistry-utils-0.10.3/plugins/paint/wikipedia/wikipediatool.cc	2009-01-05 13:09:50.000000000 -0600
+++ src/gnome-chemistry-utils-0.10.3/plugins/paint/wikipedia/wikipediatool.cc	2009-01-12 02:07:42.234000000 -0600
@@ -159,23 +159,23 @@ bool WikipediaApp::FileProcess (const gc
 	char const *InChI = Mol->GetInChI ();
 	GOutputStream *output = G_OUTPUT_STREAM (g_file_create (file, G_FILE_CREATE_NONE, NULL, &error));
 	if (!error) {
-		vector<char*> keys, values;
+		char **keys, **values;
 		char const *author = static_cast<gcp::Document*> (pDoc)->GetAuthor ();
 		// We need to be sure that the author name can be converted to latin-1
 		// otherwise, pixbuf export will fail, but it still must be passed as UTF-8
 		char *latin1_author = g_convert (author, strlen (author), "ISO-8859-1", "UTF-8", NULL, NULL, NULL);
 		if (latin1_author) {
-			keys.push_back (const_cast<char*> ("tEXt::Author"));
-			values.push_back (const_cast<char*> (author));
+			keys[0] = const_cast<char*> ("tEXt::Author");
+			values[0] = const_cast<char*> (author);
 			g_free (latin1_author);
 		}
-		keys.push_back (const_cast<char*> ("tEXt::Copyright"));
-		values.push_back (const_cast<char*> ("Public domain"));
-		keys.push_back (const_cast<char*> ("tEXt::InChI"));
-		values.push_back (const_cast<char*> (InChI));
-		keys.push_back (reinterpret_cast<char*> (NULL));
-		values.push_back (reinterpret_cast<char*> (NULL));
-		gdk_pixbuf_save_to_callbackv (alpha, do_save_image, output, "png", keys.data (), values.data (), &error);
+		keys[1] = const_cast<char*> ("tEXt::Copyright");
+		values[1] = const_cast<char*> ("Public domain");
+		keys[2] = const_cast<char*> ("tEXt::InChI");
+		values[2] = const_cast<char*> (InChI);
+		keys[3] = reinterpret_cast<char*> (NULL);
+		values[3] = reinterpret_cast<char*> (NULL);
+		gdk_pixbuf_save_to_callbackv (alpha, do_save_image, output, "png", keys, values, &error);
 		g_output_stream_close (output, NULL, NULL); // hope there will be no error there
 	}
 	if (error) {
--- origsrc/gnome-chemistry-utils-0.10.3/programs/crystal/document.cc	2009-01-05 13:09:59.000000000 -0600
+++ src/gnome-chemistry-utils-0.10.3/programs/crystal/document.cc	2009-01-12 02:18:43.890250000 -0600
@@ -46,6 +46,7 @@
 #include <vector>
 #include <map>
 #include <fstream>
+#include <iostream>
 #include <ostream>
 #include <sstream>
 #include <gio/gio.h>
